## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Allergies'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user/allergies
    metadata:
      groupName: 'User Allergies'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get user's allergies."
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User allergies retrieved successfully",
            "allergies": [
              {
                "id": 1,
                "user_id": 1,
                "allergy_text": "Peanuts",
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/allergies
    metadata:
      groupName: 'User Allergies'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new allergy for the user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      allergy_text:
        name: allergy_text
        description: 'The allergy description (max 500 characters).'
        required: true
        example: 'Peanuts and tree nuts'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      allergy_text: 'Peanuts and tree nuts'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Allergy added successfully",
            "allergy": {
              "id": 1,
              "user_id": 1,
              "allergy_text": "Peanuts and tree nuts",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/allergies/{id}'
    metadata:
      groupName: 'User Allergies'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing allergy.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The allergy ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      allergy_text:
        name: allergy_text
        description: 'The updated allergy description (max 500 characters).'
        required: true
        example: 'Severe peanut allergy'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      allergy_text: 'Severe peanut allergy'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Allergy updated successfully",
            "allergy": {
              "id": 1,
              "user_id": 1,
              "allergy_text": "Severe peanut allergy",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\UserAllergy] 1"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/allergies/{id}'
    metadata:
      groupName: 'User Allergies'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an allergy.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The allergy ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Allergy deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\UserAllergy] 1"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
