name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all products with pagination.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'optional Page number for pagination. Defaults to 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Number of products per page (1-50). Defaults to 15.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 20
    bodyParameters:
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      per_page: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Products retrieved successfully",
            "data": [
              {
                "id": 1,
                "name": "Coca Cola",
                "upc_code": "049000028391",
                "ingredient_image_url": "/storage/ingredient-images/abc123.jpg",
                "ingredients_count": 5,
                "allergens_count": 2,
                "created_at": "2024-01-01T00:00:00.000000Z"
              }
            ],
            "current_page": 1,
            "last_page": 1,
            "per_page": 15,
            "total": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products/search
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search products by UPC code or name.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      query:
        name: query
        description: 'Search term for product name or UPC code.'
        required: true
        example: coca
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'optional Maximum number of results (1-50). Defaults to 10.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      query: coca
      limit: 20
    bodyParameters:
      query:
        name: query
        description: 'Must be at least 1 character.'
        required: true
        example: bngzmiyvdljnikhw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      query: bngzmiyvdljnikhw
      limit: 22
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Search completed",
            "products": [
              {
                "id": 1,
                "name": "Coca Cola",
                "upc_code": "049000028391",
                "ingredient_image_url": "/storage/ingredient-images/abc123.jpg",
                "ingredients_count": 5,
                "allergens_count": 2,
                "created_at": "2024-01-01T00:00:00.000000Z"
              }
            ],
            "total": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products/allergens
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get products with specific allergens.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      allergens:
        name: allergens
        description: 'Comma-separated list of allergen names to filter by.'
        required: true
        example: 'peanuts,dairy'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'optional Maximum number of results (1-50). Defaults to 10.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      allergens: 'peanuts,dairy'
      limit: 20
    bodyParameters:
      allergens:
        name: allergens
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      allergens: architecto
      limit: 22
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Products with allergens retrieved successfully",
            "products": [
              {
                "id": 1,
                "name": "Coca Cola",
                "upc_code": "049000028391",
                "ingredient_image_url": "/storage/ingredient-images/abc123.jpg",
                "matching_allergens": ["peanuts"],
                "ingredients_count": 5,
                "allergens_count": 2,
                "created_at": "2024-01-01T00:00:00.000000Z"
              }
            ],
            "total": 1,
            "searched_allergens": ["peanuts", "dairy"]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get product details with ingredients and allergens.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The product ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Product retrieved successfully",
            "product": {
              "id": 1,
              "name": "Coca Cola",
              "upc_code": "049000028391",
              "ingredient_image_url": "/storage/ingredient-images/abc123.jpg",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z",
              "ingredients": [
                {
                  "id": 1,
                  "title": "Carbonated Water",
                  "allergens": []
                },
                {
                  "id": 2,
                  "title": "High Fructose Corn Syrup",
                  "allergens": [
                    {
                      "id": 1,
                      "name": "Corn"
                    }
                  ]
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/upc/{upcCode}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get product by UPC code.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      upcCode:
        name: upcCode
        description: 'The product UPC code.'
        required: true
        example: '049000028391'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      upcCode: '049000028391'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Product retrieved successfully",
            "product": {
              "id": 1,
              "name": "Coca Cola",
              "upc_code": "049000028391",
              "ingredient_image_url": "/storage/ingredient-images/abc123.jpg",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-01T00:00:00.000000Z",
              "ingredients": []
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product with ingredient image.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The product name.'
        required: true
        example: 'Coca Cola'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      upc_code:
        name: upc_code
        description: 'The product UPC code (must be unique).'
        required: true
        example: '049000028391'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ingredient_image:
        name: ingredient_image
        description: 'Image of the ingredient list (max 2MB, jpeg/png/jpg/gif).'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Coca Cola'
      upc_code: '049000028391'
    fileParameters:
      ingredient_image: null
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Product created successfully",
            "product": {
              "id": 1,
              "name": "Coca Cola",
              "upc_code": "049000028391",
              "ingredient_image_path": "ingredient-images/abc123.jpg",
              "ingredients": []
            },
            "ingredient_image_url": "/storage/ingredient-images/abc123.jpg"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The upc code has already been taken.",
            "errors": {
              "upc_code": ["The upc code has already been taken."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
